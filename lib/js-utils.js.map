{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 19051be35e0efaa90b5f","webpack:///./src/index.js","webpack:///external \"ramda\""],"names":["isPlural","value","Array","ensurePlural","arrPath","is","path","split","dotPath","join","updatePath","update","obj","parent","slice","result","mergePath","updateIn","key","mergeIn","copyProp","fromKey","toKey","moveProp","replaceValues","matchFn","toValue","fillKeys","keys","map","assocPathMutable","rootObj","length","mergeRight","left","right","forEachObj","fn","forEach","findObjPair","findObj","findObjIndex","count","modifyKeys","modifyKeysRecursive","isObject","constructor","Object","mapObjPairs","argsToObj","args","idx","moreArgs","objToArgs","incrementProp","incr","renameProp","fromName","toName","createMap","collection","createMapOf","valueKey","item","first","list","concatAll","lists","reduce","intersperseWith","coll","concat","chunk","chunkLength","current","push","invert","nestedArray","inner","outerIdx","innerIdx","sumProp","type","isInstance","types","isUuid","match","initArray","initItem","ucFirst","toUpperCase","snakeToHuman","snakeToCamel","sub","toLowerCase","camelToSnake","camelToHuman","humanToKebab","replace","pluralize","label","pluralLabel","quantify","formatNumericCurrency","cents","toFixed","parseNumericCurrency","Math","round","parseFloatString","display","formatCurrency","abs","parseCurrency","removeExtraZeroes","String","parseFloat","num","formatNumericPercent","denom","precision","parseNumericPercent","formatPercent","parsePercent","fallback","isNaN","toString","DOT_REGEXP","trim","RegExp","parseIntegerString","parseInt","pow","safeDivide","a","b","resolveAfter","duration","Promise","setTimeout","resolve","resolveWith","rejectWith","reject","noopPromise","then","catch","haltPromiseChain","promise","noop","defineEnum","values","definePrefixedEnum","prefix","wrap","unwrap","parseJsonSafe","JSON","parse","err","undefined","enforce","condition","message","Error","notImplemented","randInt","ceil","random","barcode","withSelf","throttle","threshhold","scope","timeout","clearTimeout","cached","getNewValue","clog","info","arguments","console","log","diffObjs","obj1","obj2","diff"],"mappings":"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","file":"js-utils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ramda\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"js-utils\", [\"ramda\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"js-utils\"] = factory(require(\"ramda\"));\n\telse\n\t\troot[\"js-utils\"] = factory(root[\"ramda\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 19051be35e0efaa90b5f","/* eslint func-names: 0, no-invalid-this: 0, max-lines: 0, no-undefined: 0 */\nimport {\n  omit, mapObjIndexed, curry, path as getPath, assocPath, merge, binary, when,\n  always, zipObj, clone, toPairs, find, nth, keys as getKeys, values as getValues,\n  is as ramdaIs, fromPairs, indexBy, sum, pluck, any, map, pipe, split,\n  toLower, join, curryN, uniq, equals, prop, concat, replace,\n} from 'ramda'\n\n// ============================================================================\n// Cardinality\n\nexport const isPlural = value => value instanceof Array\n\nexport const ensurePlural = value => isPlural(value) ? value : [value]\n\n// ============================================================================\n// Paths\n\nexport const arrPath = path => is('string', path) ? path.split('.') : path\n\nexport const dotPath = path => is('array', path) ? path.join('.') : path\n\nexport const updatePath = curry((path, update, obj) => {\n  const value = getPath(path, obj)\n  const parent = getPath(path.slice(0, -1), obj)\n\n  // Provide the value at the path, the value's immediate parent, and the root\n  // object as context\n  const result = update(value, parent, obj)\n\n  // Return the entire object with the path changed\n  return assocPath(path, result, obj)\n})\n\nexport const mergePath = curry((path, value, obj) =>\n  assocPath(path, merge(getPath(path, obj), value), obj))\n\n// In's are just shortcut versions of paths\nexport const updateIn = curry((key, update, obj) =>\n  updatePath([key], binary(update), obj))\n\nexport const mergeIn = curry((key, value, obj) =>\n  mergePath([key], value, obj))\n\nexport const copyProp = curry((fromKey, toKey, obj) =>\n  ({...obj, [toKey]: obj[fromKey]}))\n\nexport const moveProp = curry((fromKey, toKey, obj) =>\n  omit([fromKey], copyProp(fromKey, toKey, obj)))\n\nexport const replaceValues = curry((matchFn, toValue, obj) =>\n  mapObjIndexed(when(matchFn, always(toValue)), obj))\n\nexport const fillKeys = curry((keys, value) =>\n  zipObj(keys, keys.map(() => clone(value))))\n\nexport const assocPathMutable = curry((path, value, obj) => {\n  const rootObj = obj\n\n  while (path.length > 1) {\n    obj[path[0]] = obj[path[0]] || {}\n    obj = obj[path[0]]\n    path = path.slice(1)\n  }\n\n  obj[path[0]] = value\n\n  return rootObj\n})\n\n// ============================================================================\n// Objects\n\nexport const mergeRight = curry((left, right) => ({...right, ...left}))\n\nexport const forEachObj = (fn, obj) => toPairs(obj).forEach(([key, value]) => fn(value, key))\n\nexport const findObjPair = (fn, obj) => find(([key, value]) => fn(value, key), toPairs(obj))\n\nexport const findObj = (fn, obj) => nth(1, findObjPair(fn, obj) || [])\n\nexport const findObjIndex = curry((fn, obj) => nth(0, findObjPair(fn, obj) || []))\n\nexport const count = obj => getKeys(obj).length\n\nexport const modifyKeys = curry((fn, obj) =>\n  zipObj(getKeys(obj).map(fn), getValues(obj)))\n\nexport const modifyKeysRecursive = curry((fn, value) => {\n  if (ramdaIs(Array, value)) {\n    return value.map(modifyKeysRecursive(fn))\n  }\n\n  // Only recurse into pojos\n  if (!isObject(value) || value.constructor !== Object) {\n    return value\n  }\n\n  return zipObj(\n    getKeys(value).map(fn),\n    getValues(value).map(modifyKeysRecursive(fn)))\n})\n\nexport const isObject = value => ramdaIs(Object, value) && !ramdaIs(Array, value)\n\nexport const mapObjPairs = (fn, obj) =>\n  fromPairs(toPairs(obj).map(fn))\n\n// Gotta curry this kinda manually since keys/args might have 0 length\nexport const argsToObj = (keys, ...args) => {\n  if (args.length) {\n    return fromPairs(keys.map((key, idx) => [key, args[idx]]))\n  }\n\n  return (...moreArgs) => fromPairs(keys.map((key, idx) => [key, moreArgs[idx]]))\n}\n\nexport const objToArgs = curry((keys, obj) => keys.map(key => obj[key]))\n\nexport const incrementProp = (key, incr = 1) => value =>\n  ({...value, [key]: value[key] + incr})\n\nexport const renameProp = curry((fromName, toName, obj) =>\n  ({...omit([fromName], obj), [toName]: obj[fromName]}))\n\nexport const createMap = curry((key, collection) =>\n  indexBy(prop(key), collection || []))\n\nexport const createMapOf = curry((key, valueKey, collection) =>\n  fromPairs((collection || []).map(item => [item[key], item[valueKey]])))\n\n// ============================================================================\n// Arrays\n\nexport const first = list => list[0]\n\nexport const concatAll = (lists = []) => lists.reduce(concat, [])\n\nexport const intersperseWith = curry((fn, coll) =>\n  coll.reduce((result, item, idx) =>\n    result.length ? result.concat([fn(item, idx), item]) : result.concat(item), []))\n\nexport const chunk = curry((chunkLength, coll) => {\n  const result = []\n  let current = []\n\n  coll.forEach(item => {\n    if (current.length < chunkLength) {\n      current.push(item)\n    }\n\n    if (current.length === chunkLength) {\n      result.push(current)\n      current = []\n    }\n  })\n\n  if (current.length > 0) {\n    result.push(current)\n  }\n\n  return result\n})\n\nexport const invert = nestedArray => {\n  const result = []\n\n  nestedArray.forEach((inner, outerIdx) =>\n    inner.forEach((value, innerIdx) => {\n      result[innerIdx] = result[innerIdx] || []\n      result[innerIdx][outerIdx] = value\n    }))\n\n  return result\n}\n\nexport const sumProp = curry((key, coll) => sum(pluck(key, coll)))\n\n\n// ============================================================================\n// Types\n\nexport const is = curry((type, value) => {\n  // typeof [] === 'object'\n  if (isInstance(Array, value)) {\n    return type === 'array'\n  }\n\n  // typeof null === 'object'\n  if (value === null) {\n    return type === 'null'\n  }\n\n  return typeof value === type\n})\n\nexport const isInstance = curry((types, value) =>\n  any(type => typeof value === 'object' && value instanceof type, ensurePlural(types)))\n\nexport const isUuid = value =>\n  value.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/)\n\nexport const initArray = (length, initItem) => map(initItem, new Array(length))\n\n// ============================================================================\n// Strings\n\nexport const ucFirst = value => value.slice(0, 1).toUpperCase() + value.slice(1)\n\nexport const snakeToHuman = pipe(toLower, split('_'), map(ucFirst), join(' '))\n\nexport const snakeToCamel = value =>\n  value.split('_').map((sub, idx) =>\n    idx === 0 ? sub : ucFirst(sub.toLowerCase())).join('')\n\nexport const camelToSnake = replace(/([A-Z])/g, match => `_${match.toLowerCase()}`)\n\nexport const camelToHuman = pipe(camelToSnake, snakeToHuman)\n\nexport const humanToKebab = value => value.replace(' ', '-').toLowerCase()\n\nexport const pluralize = (value, label, pluralLabel) =>\n  value === 1 ? label : (pluralLabel || `${label}s`)\n\nexport const quantify = (value, label, pluralLabel) =>\n  `${value} ${pluralize(value, label, pluralLabel)}`\n\n// ============================================================================\n// Currency\n\nexport const formatNumericCurrency = cents => (cents / 100).toFixed(2)\n\nexport const parseNumericCurrency = display => Math.round(parseFloatString(display) * 100)\n\nexport const formatCurrency = cents =>\n  cents >= 0\n    ? `$${formatNumericCurrency(cents)}`\n    : `-$${formatNumericCurrency(Math.abs(cents))}`\n\nexport const parseCurrency = display => parseNumericCurrency(display.replace('$', ''))\n\n// ============================================================================\n// Percents\n\nconst removeExtraZeroes = num => String(parseFloat(num))\n\nexport const formatNumericPercent = (num, denom = 100, precision = 1) =>\n  removeExtraZeroes((num / denom * 100).toFixed(precision))\n\nexport const parseNumericPercent = (display, denom = 100, precision = 1) =>\n  round(precision, parseFloatString(display) / (100 / denom))\n\nexport const formatPercent = pipe(formatNumericPercent, value => `${value}%`)\n\nexport const parsePercent = (value, ...args) =>\n  parseNumericPercent(value.replace('%', ''), ...args)\n\n// ============================================================================\n// Numbers\n\nexport const parseFloatString = (value, fallback = 0) => {\n  if (is('number', value) && !isNaN(value)) {\n    return parseFloat(value)\n  }\n\n  value = parseFloat(value.toString().replace(parseFloatString.DOT_REGEXP, '.').trim())\n\n  return isNaN(value) ? fallback : value\n}\n\nparseFloatString.DOT_REGEXP = new RegExp(/\\.+/)\n\nexport const parseIntegerString = (value, fallback = 0) =>\n  parseInt(parseFloatString(value, fallback), 10)\n\nexport const round = (precision, value) =>\n  Math.round(value * Math.pow(10, precision)) / Math.pow(10, precision)\n\nexport const safeDivide = (a, b, precision = 0) =>\n  b === 0 ? 0 : round(precision, a / b)\n\n// ============================================================================\n// Promises\n\nexport const resolveAfter = curry((duration, value) =>\n  new Promise(resolve => setTimeout(() => resolve(value), duration)))\n\nexport const resolveWith = fn => (...args) => Promise.resolve(fn(...args))\n\nexport const rejectWith = fn => (...args) => Promise.reject(fn(...args))\n\nexport const noopPromise = {then: () => noopPromise, catch: () => noopPromise}\n\nexport const haltPromiseChain = promise => promise.catch(noop) || noopPromise\n\n// ============================================================================\n// Really misc\n\n// Let enums be an array, but also add some properties to access values with\nexport const defineEnum = values => {\n  values.forEach(value => {\n    values[value.toUpperCase()] = value\n  })\n\n  return values\n}\n\nexport const definePrefixedEnum = (prefix, values) => {\n  values.forEach(value => {\n    values[value.toUpperCase()] = `${prefix}${value}`\n  })\n\n  return values\n}\n\n// A promise-like interface, but sync. For better ramda chaining,\n// inspired by clojure's thread macro\nexport const wrap = value => ({\n  then: fn => wrap(fn(value)),\n  unwrap: always(value),\n})\n\nexport const parseJsonSafe = value => {\n  try {\n    return JSON.parse(value)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const enforce = (condition, message) => {\n  if (!condition) {\n    throw new Error(message)\n  }\n\n  return condition\n}\n\nexport const noop = always(undefined)\n\nexport const notImplemented = message => () => {\n  throw new Error(message)\n}\n\nexport const randInt = () => Math.ceil(Math.random() * 9)\n\nexport const barcode = () =>\n  initArray(12, randInt).join('')\n\nexport const withSelf = fn => function (...args) {\n  return fn(this, ...args)\n}\n\nexport const throttle = (threshhold, fn, scope = {}) =>\n  // Scope can be passed in so we can throttle multiple functions\n  // with the same promise\n\n   (...args) => {\n    // If there's a timeout, that means there was a previous call. Cancel it.\n    if (scope.timeout) {\n      clearTimeout(scope.timeout)\n    }\n\n    // If there isn't a resolution function, that means any old calls completed\n    // _resolve and _promise are shared by all throttled callers so everyone\n    // gets the most recent value\n    if (!scope.resolve) {\n      scope.promise = new Promise(resolve => {\n        scope.resolve = resolve\n      })\n    }\n\n    // Wait until inputs slow down to call the function\n    scope.timeout = setTimeout(() => {\n      // Now call the function and resolve with the return value\n      scope.resolve(fn(...args))\n\n      // Clear out the resolve function, which indicates there are callers\n      // waiting on the most recent result\n      scope.resolve = null\n      scope.timeout = null\n    }, threshhold)\n\n    return scope.promise\n  }\n\n\nexport const cached = (obj, path, getNewValue) => {\n  let value = getPath(path, obj)\n\n  if (value === undefined) {\n    value = getNewValue()\n\n    assocPathMutable(path, value, obj)\n  }\n\n  return value\n}\n\nexport const clog = curryN(2, function clog(info, value) {\n  /* eslint no-console: 0*/\n  enforce(arguments.length === 2, 'Both info and value should be provided to clog')\n\n  console.log(info, value)\n\n  return value\n})\n\nexport const diffObjs = (obj1, obj2) => {\n  const diff = []\n\n  uniq(getKeys(obj1).concat(getKeys(obj2))).forEach(key => {\n    if (obj1[key] === undefined && obj2[key] !== undefined) {\n      diff.push([`key \"${key}\" is new in object 2. New value:`, obj2[key]])\n    }\n\n    if (obj2[key] === undefined && obj1[key] !== undefined) {\n      diff.push([`key \"${key}\" was removed in object 2. Old value:`, obj1[key]])\n    }\n\n    if (!equals(obj1[key], obj2[key])) {\n      diff.push([\n        `key \"${key}\" was changed in object 2. Old value: `,\n        obj1[key],\n        'New value:',\n        obj2[key],\n      ])\n    } else if (obj1[key] !== obj2[key]) {\n      diff.push([\n        `key \"${key}\" was changed in object 2 (by identity, but not value)`,\n      ])\n    }\n  })\n\n  return diff\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ramda\"\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}